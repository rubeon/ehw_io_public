{u'apiVersion': u'v1',
 u'kind': u'Template',
 u'labels': {u'app': u'django-psql-example',
             u'template': u'django-psql-example'},
 u'message': u'The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.',
 u'metadata': {u'annotations': {u'description': u'An example Django application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.\n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.',
                                u'iconClass': u'icon-python',
                                u'openshift.io/display-name': u'Django + PostgreSQL (Ephemeral)',
                                u'openshift.io/documentation-url': u'https://github.com/openshift/django-ex',
                                u'openshift.io/long-description': u'This template defines resources needed to develop a Django based application, including a build configuration, application deployment configuration, and database deployment configuration.  The database is stored in non-persistent storage, so this configuration should be used for experimental purposes only.',
                                u'openshift.io/provider-display-name': u'Red Hat, Inc.',
                                u'openshift.io/support-url': u'https://access.redhat.com',
                                u'tags': u'quickstart,python,django',
                                u'template.openshift.io/bindable': u'false'},
               u'name': u'django-psql-example'},
 u'objects': [{u'apiVersion': u'v1',
               u'kind': u'Secret',
               u'metadata': {u'name': u'${NAME}'},
               u'stringData': {u'database-password': u'${DATABASE_PASSWORD}',
                               u'database-user': u'${DATABASE_USER}',
                               u'django-secret-key': u'${DJANGO_SECRET_KEY}'}},
              {u'apiVersion': u'v1',
               u'kind': u'Service',
               u'metadata': {u'annotations': {u'description': u'Exposes and load balances the application pods',
                                              u'service.alpha.openshift.io/dependencies': u'[{"name": "${DATABASE_SERVICE_NAME}", "kind": "Service"}]'},
                             u'name': u'${NAME}'},
               u'spec': {u'ports': [{u'name': u'web',
                                     u'port': 8080,
                                     u'targetPort': 8080}],
                         u'selector': {u'name': u'${NAME}'}}},
              {u'apiVersion': u'v1',
               u'kind': u'Route',
               u'metadata': {u'name': u'${NAME}'},
               u'spec': {u'host': u'${APPLICATION_DOMAIN}',
                         u'to': {u'kind': u'Service', u'name': u'${NAME}'}}},
              {u'apiVersion': u'v1',
               u'kind': u'ImageStream',
               u'metadata': {u'annotations': {u'description': u'Keeps track of changes in the application image'},
                             u'name': u'${NAME}'}},
              {u'apiVersion': u'v1',
               u'kind': u'BuildConfig',
               u'metadata': {u'annotations': {u'description': u'Defines how to build the application',
                                              u'template.alpha.openshift.io/wait-for-ready': u'true'},
                             u'name': u'${NAME}'},
               u'spec': {u'output': {u'to': {u'kind': u'ImageStreamTag',
                                             u'name': u'${NAME}:latest'}},
                         u'postCommit': {u'script': u'./manage.py test'},
                         u'source': {u'contextDir': u'${CONTEXT_DIR}',
                                     u'git': {u'ref': u'${SOURCE_REPOSITORY_REF}',
                                              u'uri': u'${SOURCE_REPOSITORY_URL}'},
                                     u'type': u'Git'},
                         u'strategy': {u'sourceStrategy': {u'env': [{u'name': u'PIP_INDEX_URL',
                                                                     u'value': u'${PIP_INDEX_URL}'}],
                                                           u'from': {u'kind': u'ImageStreamTag',
                                                                     u'name': u'python:${PYTHON_VERSION}',
                                                                     u'namespace': u'${NAMESPACE}'}},
                                       u'type': u'Source'},
                         u'triggers': [{u'type': u'ImageChange'},
                                       {u'type': u'ConfigChange'},
                                       {u'github': {u'secret': u'${GITHUB_WEBHOOK_SECRET}'},
                                        u'type': u'GitHub'}]}},
              {u'apiVersion': u'v1',
               u'kind': u'DeploymentConfig',
               u'metadata': {u'annotations': {u'description': u'Defines how to deploy the application server',
                                              u'template.alpha.openshift.io/wait-for-ready': u'true'},
                             u'name': u'${NAME}'},
               u'spec': {u'replicas': 1,
                         u'selector': {u'name': u'${NAME}'},
                         u'strategy': {u'type': u'Recreate'},
                         u'template': {u'metadata': {u'labels': {u'name': u'${NAME}'},
                                                     u'name': u'${NAME}'},
                                       u'spec': {u'containers': [{u'env': [{u'name': u'DATABASE_SERVICE_NAME',
                                                                            u'value': u'${DATABASE_SERVICE_NAME}'},
                                                                           {u'name': u'DATABASE_ENGINE',
                                                                            u'value': u'${DATABASE_ENGINE}'},
                                                                           {u'name': u'DATABASE_NAME',
                                                                            u'value': u'${DATABASE_NAME}'},
                                                                           {u'name': u'DATABASE_USER',
                                                                            u'valueFrom': {u'secretKeyRef': {u'key': u'database-user',
                                                                                                             u'name': u'${NAME}'}}},
                                                                           {u'name': u'DATABASE_PASSWORD',
                                                                            u'valueFrom': {u'secretKeyRef': {u'key': u'database-password',
                                                                                                             u'name': u'${NAME}'}}},
                                                                           {u'name': u'APP_CONFIG',
                                                                            u'value': u'${APP_CONFIG}'},
                                                                           {u'name': u'DJANGO_SECRET_KEY',
                                                                            u'valueFrom': {u'secretKeyRef': {u'key': u'django-secret-key',
                                                                                                             u'name': u'${NAME}'}}}],
                                                                  u'image': u' ',
                                                                  u'livenessProbe': {u'httpGet': {u'path': u'/health',
                                                                                                  u'port': 8080},
                                                                                     u'initialDelaySeconds': 30,
                                                                                     u'timeoutSeconds': 3},
                                                                  u'name': u'django-psql-example',
                                                                  u'ports': [{u'containerPort': 8080}],
                                                                  u'readinessProbe': {u'httpGet': {u'path': u'/health',
                                                                                                   u'port': 8080},
                                                                                      u'initialDelaySeconds': 3,
                                                                                      u'timeoutSeconds': 3},
                                                                  u'resources': {u'limits': {u'memory': u'${MEMORY_LIMIT}'}}}]}},
                         u'triggers': [{u'imageChangeParams': {u'automatic': True,
                                                               u'containerNames': [u'django-psql-example'],
                                                               u'from': {u'kind': u'ImageStreamTag',
                                                                         u'name': u'${NAME}:latest'}},
                                        u'type': u'ImageChange'},
                                       {u'type': u'ConfigChange'}]}},
              {u'apiVersion': u'v1',
               u'kind': u'Service',
               u'metadata': {u'annotations': {u'description': u'Exposes the database server'},
                             u'name': u'${DATABASE_SERVICE_NAME}'},
               u'spec': {u'ports': [{u'name': u'postgresql',
                                     u'port': 5432,
                                     u'targetPort': 5432}],
                         u'selector': {u'name': u'${DATABASE_SERVICE_NAME}'}}},
              {u'apiVersion': u'v1',
               u'kind': u'DeploymentConfig',
               u'metadata': {u'annotations': {u'description': u'Defines how to deploy the database',
                                              u'template.alpha.openshift.io/wait-for-ready': u'true'},
                             u'name': u'${DATABASE_SERVICE_NAME}'},
               u'spec': {u'replicas': 1,
                         u'selector': {u'name': u'${DATABASE_SERVICE_NAME}'},
                         u'strategy': {u'type': u'Recreate'},
                         u'template': {u'metadata': {u'labels': {u'name': u'${DATABASE_SERVICE_NAME}'},
                                                     u'name': u'${DATABASE_SERVICE_NAME}'},
                                       u'spec': {u'containers': [{u'env': [{u'name': u'POSTGRESQL_USER',
                                                                            u'valueFrom': {u'secretKeyRef': {u'key': u'database-user',
                                                                                                             u'name': u'${NAME}'}}},
                                                                           {u'name': u'POSTGRESQL_PASSWORD',
                                                                            u'valueFrom': {u'secretKeyRef': {u'key': u'database-password',
                                                                                                             u'name': u'${NAME}'}}},
                                                                           {u'name': u'POSTGRESQL_DATABASE',
                                                                            u'value': u'${DATABASE_NAME}'}],
                                                                  u'image': u' ',
                                                                  u'livenessProbe': {u'exec': {u'command': [u'/usr/libexec/check-container',
                                                                                                            u'--live']},
                                                                                     u'initialDelaySeconds': 120,
                                                                                     u'timeoutSeconds': 10},
                                                                  u'name': u'postgresql',
                                                                  u'ports': [{u'containerPort': 5432}],
                                                                  u'readinessProbe': {u'exec': {u'command': [u'/usr/libexec/check-container']},
                                                                                      u'initialDelaySeconds': 5,
                                                                                      u'timeoutSeconds': 1},
                                                                  u'resources': {u'limits': {u'memory': u'${MEMORY_POSTGRESQL_LIMIT}'}},
                                                                  u'volumeMounts': [{u'mountPath': u'/var/lib/pgsql/data',
                                                                                     u'name': u'data'}]}],
                                                 u'volumes': [{u'emptyDir': {},
                                                               u'name': u'data'}]}},
                         u'triggers': [{u'imageChangeParams': {u'automatic': True,
                                                               u'containerNames': [u'postgresql'],
                                                               u'from': {u'kind': u'ImageStreamTag',
                                                                         u'name': u'postgresql:${POSTGRESQL_VERSION}',
                                                                         u'namespace': u'${NAMESPACE}'}},
                                        u'type': u'ImageChange'},
                                       {u'type': u'ConfigChange'}]}}],
 u'parameters': [{u'description': u'The name assigned to all of the frontend objects defined in this template.',
                  u'displayName': u'Name',
                  u'name': u'NAME',
                  u'required': True,
                  u'value': u'django-psql-example'},
                 {u'description': u'The OpenShift Namespace where the ImageStream resides.',
                  u'displayName': u'Namespace',
                  u'name': u'NAMESPACE',
                  u'required': True,
                  u'value': u'openshift'},
                 {u'description': u'Version of Python image to be used (3.4, 3.5, 3.6 or latest).',
                  u'displayName': u'Version of Python Image',
                  u'name': u'PYTHON_VERSION',
                  u'required': True,
                  u'value': u'3.6'},
                 {u'description': u'Version of PostgreSQL image to be used (9.4, 9.5, 9.6 or latest).',
                  u'displayName': u'Version of PostgreSQL Image',
                  u'name': u'POSTGRESQL_VERSION',
                  u'required': True,
                  u'value': u'9.6'},
                 {u'description': u'Maximum amount of memory the Django container can use.',
                  u'displayName': u'Memory Limit',
                  u'name': u'MEMORY_LIMIT',
                  u'required': True,
                  u'value': u'512Mi'},
                 {u'description': u'Maximum amount of memory the PostgreSQL container can use.',
                  u'displayName': u'Memory Limit (PostgreSQL)',
                  u'name': u'MEMORY_POSTGRESQL_LIMIT',
                  u'required': True,
                  u'value': u'512Mi'},
                 {u'description': u'The URL of the repository with your application source code.',
                  u'displayName': u'Git Repository URL',
                  u'name': u'SOURCE_REPOSITORY_URL',
                  u'required': True,
                  u'value': u'https://github.com/openshift/django-ex.git'},
                 {u'description': u'Set this to a branch name, tag or other ref of your repository if you are not using the default branch.',
                  u'displayName': u'Git Reference',
                  u'name': u'SOURCE_REPOSITORY_REF'},
                 {u'description': u'Set this to the relative path to your project if it is not in the root of your repository.',
                  u'displayName': u'Context Directory',
                  u'name': u'CONTEXT_DIR'},
                 {u'description': u'The exposed hostname that will route to the Django service, if left blank a value will be defaulted.',
                  u'displayName': u'Application Hostname',
                  u'name': u'APPLICATION_DOMAIN',
                  u'value': u''},
                 {u'description': u'Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.',
                  u'displayName': u'GitHub Webhook Secret',
                  u'from': u'[a-zA-Z0-9]{40}',
                  u'generate': u'expression',
                  u'name': u'GITHUB_WEBHOOK_SECRET'},
                 {u'displayName': u'Database Service Name',
                  u'name': u'DATABASE_SERVICE_NAME',
                  u'required': True,
                  u'value': u'postgresql'},
                 {u'description': u'Database engine: postgresql, mysql or sqlite (default).',
                  u'displayName': u'Database Engine',
                  u'name': u'DATABASE_ENGINE',
                  u'required': True,
                  u'value': u'postgresql'},
                 {u'displayName': u'Database Name',
                  u'name': u'DATABASE_NAME',
                  u'required': True,
                  u'value': u'default'},
                 {u'displayName': u'Database Username',
                  u'name': u'DATABASE_USER',
                  u'required': True,
                  u'value': u'django'},
                 {u'displayName': u'Database User Password',
                  u'from': u'[a-zA-Z0-9]{16}',
                  u'generate': u'expression',
                  u'name': u'DATABASE_PASSWORD'},
                 {u'description': u'Relative path to Gunicorn configuration file (optional).',
                  u'displayName': u'Application Configuration File Path',
                  u'name': u'APP_CONFIG'},
                 {u'description': u'Set this to a long random string.',
                  u'displayName': u'Django Secret Key',
                  u'from': u'[\\w]{50}',
                  u'generate': u'expression',
                  u'name': u'DJANGO_SECRET_KEY'},
                 {u'description': u'The custom PyPi index URL',
                  u'displayName': u'Custom PyPi Index URL',
                  u'name': u'PIP_INDEX_URL',
                  u'value': u''}]}